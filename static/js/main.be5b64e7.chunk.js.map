{"version":3,"sources":["assets/toadz_desktop.png","assets/toadz_mobile.png","components/header.tsx","components/faq.tsx","components/about.tsx","components/team.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Header","imageUrl","window","innerWidth","desktopImg","mobileImg","useState","account","setAccount","contract","setContract","claimByIdModalIsOpen","setClaimByIdModalIsOpen","checkToadModalIsOpen","setCheckToadModalIsOpen","claimAllModalIsOpen","setClaimAllModalIsOpen","idsToClaim","setIdsToClaim","idToCheck","setIdToCheck","isClaimed","setIsClaimed","unclaimedIds","setUnclaimedIds","winterSymbols","useEffect","a","web3","Web3","givenProvider","accounts","eth","getAccounts","length","getExistingWallet","abi","JSON","parse","testAbi","Contract","err","console","log","loadContractAbi","fetchUnclaimed","methods","getAllUnclaimedTokensByWallet","call","unclaimed","map","str","filter","num","handleAccountChange","ethereum","on","connectWallet","enable","addEventListener","once","setTimeout","claimById","split","some","number","isNaN","alert","claimOne","send","from","claimMany","claimForAll","slice","checkToad","oneofones","i","push","includes","claimed","src","alt","id","onClick","Modal","isOpen","toggle","ModalBody","Form","row","onSubmit","e","preventDefault","Input","type","value","onChange","target","Row","className","Button","Alert","color","icon","faTimesCircle","faCheckCircle","readOnly","href","rel","Array","Math","floor","random","symbol","idx","FAQ","Col","sm","style","fontSize","textAlign","About","borderRadius","width","Team","borderStyle","property","datatype","about","App","Container","fluid","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be5b64e7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/toadz_desktop.bd4ec1b7.png\";","export default __webpack_public_path__ + \"static/media/toadz_mobile.6b42b120.png\";","import React, { ReactElement, useEffect, useState } from \"react\";\r\nimport \"./header.css\";\r\nimport desktopImg from \"../assets/toadz_desktop.png\";\r\nimport mobileImg from \"../assets/toadz_mobile.png\";\r\nimport Web3 from \"web3\";\r\nimport contractAbi from \"../santoadz.json\";\r\nimport testAbi from \"../santoadz-rinkeby.json\";\r\nimport { Alert, Button, Form, Input, Modal, ModalBody, Row } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCheckCircle,\r\n  faTimesCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ndeclare const window: any;\r\n\r\nconst CONTRACT_ADDRESS = \"0x7FCBb823ff16110E5A14C3c897dC0af334423E4f\";\r\n// const PAYABLE_AMOUNT = 0.069;\r\n\r\nconst Header = (): ReactElement => {\r\n  const imageUrl = window.innerWidth >= 961 ? desktopImg : mobileImg;\r\n\r\n  const [account, setAccount] = useState<string>(\"\");\r\n  const [contract, setContract] = useState<any>(null);\r\n  const [claimByIdModalIsOpen, setClaimByIdModalIsOpen] =\r\n    useState<boolean>(false);\r\n  const [checkToadModalIsOpen, setCheckToadModalIsOpen] =\r\n    useState<boolean>(false);\r\n  const [claimAllModalIsOpen, setClaimAllModalIsOpen] =\r\n    useState<boolean>(false);\r\n\r\n  const [idsToClaim, setIdsToClaim] = useState<string>(\"\");\r\n  const [idToCheck, setIdToCheck] = useState<string>(\"\");\r\n  const [isClaimed, setIsClaimed] = useState<any>(null);\r\n\r\n  const [unclaimedIds, setUnclaimedIds] = useState<any>(null);\r\n\r\n  const winterSymbols = [\r\n    \"🎅\",\r\n    \"🎁\",\r\n    \"🎄\",\r\n    \"⛄\",\r\n    \"🕎\",\r\n    \"✡️\",\r\n    \"❅\",\r\n    \"❅\",\r\n    \"❅\",\r\n    \"❅\",\r\n    \"❅\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const getExistingWallet = async () => {\r\n      const web3 = new Web3(Web3.givenProvider);\r\n      let accounts: string[] = [];\r\n      try {\r\n        accounts = await web3.eth.getAccounts();\r\n      } catch (err) {}\r\n      if (accounts.length > 0) {\r\n        setAccount(accounts[0]);\r\n      }\r\n    };\r\n    const loadContractAbi = () => {\r\n      const web3 = new Web3(Web3.givenProvider);\r\n      try {\r\n        const abi = JSON.parse(testAbi);\r\n        setContract(new web3.eth.Contract(abi.abi, CONTRACT_ADDRESS));\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getExistingWallet();\r\n    loadContractAbi();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchUnclaimed = async () => {\r\n      const unclaimed = await contract.methods\r\n        .getAllUnclaimedTokensByWallet(account)\r\n        .call();\r\n      setUnclaimedIds(\r\n        unclaimed.map((str: string) => +str).filter((num: number) => num !== 0)\r\n      );\r\n    };\r\n    if (contract != null && account.length > 0) {\r\n      fetchUnclaimed();\r\n    }\r\n  }, [contract, account]);\r\n\r\n  const fetchUnclaimed = async () => {\r\n    if (contract != null && account.length > 0) {\r\n      const unclaimed = await contract.methods\r\n        .getAllUnclaimedTokensByWallet(account)\r\n        .call();\r\n      setUnclaimedIds(\r\n        unclaimed.map((str: string) => +str).filter((num: number) => num !== 0)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleAccountChange = () => {\r\n    if (window.ethereum) {\r\n      window.ethereum.on(\"accountsChanged\", () => {\r\n        setAccount(\"\");\r\n      });\r\n    }\r\n  };\r\n\r\n  const connectWallet = async () => {\r\n    await window.ethereum.enable();\r\n    const web3 = new Web3(Web3.givenProvider);\r\n    const accounts = await web3.eth.getAccounts();\r\n    setAccount(accounts[0]);\r\n  };\r\n\r\n  if (window.ethereum) {\r\n    handleAccountChange();\r\n  } else {\r\n    window.addEventListener(\"ethereum#initialized\", handleAccountChange, {\r\n      once: true,\r\n    });\r\n\r\n    // If the event is not dispatched by the end of the timeout,\r\n    // the user probably doesn't have MetaMask installed.\r\n    setTimeout(handleAccountChange, 3000); // 3 seconds\r\n  }\r\n\r\n  const claimById = async () => {\r\n    if (contract != null && account.length > 0) {\r\n      const split = idsToClaim\r\n        .split(\",\")\r\n        .map((str) => +str)\r\n        .filter((num) => num !== 0);\r\n\r\n      if (split.some((number) => isNaN(number))) {\r\n        alert(\"Incorrect ID inputs.\");\r\n      }\r\n\r\n      if (split.length === 1) {\r\n        await contract.methods.claimOne(split[0]).send({\r\n          from: account,\r\n        });\r\n      } else {\r\n        await contract.methods.claimMany(split).send({\r\n          from: account,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const claimForAll = async () => {\r\n    if (contract != null && account.length > 0 && unclaimedIds.length > 0) {\r\n      if (unclaimedIds.length === 1) {\r\n        await contract.methods.claimOne(unclaimedIds[0]).send({\r\n          from: account,\r\n        });\r\n      } else {\r\n        if (unclaimedIds.length > 20) {\r\n          await contract.methods.claimMany(unclaimedIds.slice(0, 20)).send({\r\n            from: account,\r\n          });\r\n        } else {\r\n          await contract.methods.claimMany(unclaimedIds).send({\r\n            from: account,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkToad = async () => {\r\n    if (contract != null) {\r\n      if (isNaN(+idToCheck)) {\r\n        alert(\"Invalid id input\");\r\n      }\r\n      let oneofones = [];\r\n      for (let i = 1; i <= 56; i++) {\r\n        oneofones.push(i * 1000000);\r\n      }\r\n      if (\r\n        +idToCheck < 1 ||\r\n        (+idToCheck > 6969 && !oneofones.includes(+idToCheck))\r\n      ) {\r\n        alert(\"Toad id does not exist\");\r\n      }\r\n      if (contract != null) {\r\n        const isClaimed = await contract.methods.claimed(+idToCheck).call();\r\n        setIsClaimed(isClaimed);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <img src={imageUrl} alt=\"\" />\r\n      <div id=\"claimById\" onClick={() => setClaimByIdModalIsOpen(true)} />\r\n      <Modal\r\n        isOpen={claimByIdModalIsOpen}\r\n        toggle={() => setClaimByIdModalIsOpen(!claimByIdModalIsOpen)}\r\n      >\r\n        <ModalBody>\r\n          <h2>Enter Your Toad Ids to Claim</h2>\r\n          <p>e.g. \"88, 4453, 12000000\"</p>\r\n          <Form\r\n            row\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              claimById();\r\n            }}\r\n          >\r\n            <Input\r\n              type=\"textarea\"\r\n              id=\"claimIds\"\r\n              value={idsToClaim}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n                setIdsToClaim(e.target.value);\r\n              }}\r\n            />\r\n            <Row className=\"w-100\">\r\n              <Button className=\"w-100 my-2\">\r\n                <h4 className=\"m-0\">claim</h4>\r\n              </Button>\r\n            </Row>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n\r\n      <Modal\r\n        isOpen={checkToadModalIsOpen}\r\n        toggle={() => setCheckToadModalIsOpen(!checkToadModalIsOpen)}\r\n      >\r\n        <ModalBody>\r\n          <h2>Enter a Toad's Id to Check</h2>\r\n          <p>e.g. \"4020\"</p>\r\n          <Form\r\n            row\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              checkToad();\r\n            }}\r\n          >\r\n            <Input\r\n              type=\"textarea\"\r\n              id=\"checkIds\"\r\n              value={idToCheck}\r\n              onChange={(e) => {\r\n                e.preventDefault();\r\n                setIdToCheck(e.target.value);\r\n              }}\r\n            />\r\n            <Row className=\"w-100\">\r\n              <Button className=\"w-100 my-2\">\r\n                <h4 className=\"m-0\">check</h4>\r\n              </Button>\r\n            </Row>\r\n            {idToCheck != null && idToCheck !== \"\" && !isNaN(+idToCheck) && (\r\n              <Row className=\"w-100\">\r\n                <img\r\n                  src={`https://cryptoadz.mypinata.cloud/ipfs/QmfNm2KG4J5avadkx8Uvea8KW7CFVWYPYJ82LvP8KTm6bw/${idToCheck}.png`}\r\n                  alt=\"toad\"\r\n                />\r\n              </Row>\r\n            )}\r\n            {isClaimed != null && (\r\n              <Row className=\"w-100\">\r\n                <Alert\r\n                  color={isClaimed ? \"warning\" : \"success\"}\r\n                  className=\"w-100 my-2\"\r\n                >\r\n                  <h4 className=\"m-0\">\r\n                    {isClaimed ? (\r\n                      <>\r\n                        <FontAwesomeIcon\r\n                          icon={faTimesCircle}\r\n                          className=\"mr-1\"\r\n                        />\r\n                        This Toad Has Already Been Claimed\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <FontAwesomeIcon\r\n                          icon={faCheckCircle}\r\n                          className=\"mr-1\"\r\n                        />\r\n                        This Toad Is Available To Be Claimed\r\n                      </>\r\n                    )}\r\n                  </h4>\r\n                </Alert>\r\n              </Row>\r\n            )}\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n\r\n      <Modal\r\n        isOpen={claimAllModalIsOpen}\r\n        toggle={() => setClaimAllModalIsOpen(!claimAllModalIsOpen)}\r\n      >\r\n        <ModalBody>\r\n          <h2>Your Unclaimed Toad Ids</h2>\r\n          <Form\r\n            row\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              claimForAll();\r\n            }}\r\n          >\r\n            <Input\r\n              readOnly\r\n              type=\"textarea\"\r\n              id=\"checkIds\"\r\n              value={unclaimedIds || \"Data not found/loaded.\"}\r\n            />\r\n            <Row className=\"w-100\">\r\n              <Button className=\"w-100 my-2\">\r\n                <h4 className=\"m-0\">claim</h4>\r\n              </Button>\r\n            </Row>\r\n            {unclaimedIds && unclaimedIds.length > 20 && (\r\n              <Row className=\"w-100\">\r\n                <Alert color=\"warning\" className=\"w-100 my-2\">\r\n                  <h6 className=\"m-0\">\r\n                    A maximum of 20 MistleToadz will be claimed in this\r\n                    transaction due to gas limits. You may claim more once the\r\n                    first transaction has finished. You may have to refresh the\r\n                    page after your claim transaction has succeeded to see\r\n                    updated values in the box above\r\n                  </h6>\r\n                </Alert>\r\n              </Row>\r\n            )}\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n\r\n      {!(\r\n        claimByIdModalIsOpen ||\r\n        checkToadModalIsOpen ||\r\n        claimAllModalIsOpen\r\n      ) && (\r\n        <div\r\n          id=\"claimForAll\"\r\n          onClick={() => {\r\n            fetchUnclaimed();\r\n            setClaimAllModalIsOpen(true);\r\n          }}\r\n        />\r\n      )}\r\n      {!(\r\n        claimByIdModalIsOpen ||\r\n        checkToadModalIsOpen ||\r\n        claimAllModalIsOpen\r\n      ) && <div id=\"checkToad\" onClick={() => setCheckToadModalIsOpen(true)} />}\r\n      <div id=\"checkToadText\">CHECK</div>\r\n      <a href=\"https://opensea.io/\" target=\"_blank\" rel=\"noreferrer\">\r\n        <div id=\"santoadOpensea\" />\r\n      </a>\r\n      {/* <Link smooth={true} to=\"about\">\r\n        <div id=\"aboutButton\" />\r\n      </Link> */}\r\n      {/* <Link smooth={true} to=\"faq\">\r\n        <div id=\"faqButton\" />\r\n      </Link> */}\r\n      <a href=\"https://discord.gg/PDVfDSDbcE\" target=\"_blank\" rel=\"noreferrer\">\r\n        <div id=\"discordButton\" />\r\n      </a>\r\n      <div id=\"metamaskConnect\" onClick={connectWallet} />\r\n      {account !== \"\" ? (\r\n        <div id=\"walletAddress\">{account.slice(0, 9)}</div>\r\n      ) : (\r\n        <div id=\"walletAddress\">CONNECT</div>\r\n      )}\r\n      {/* <div id=\"mintHeader\">\r\n        <FontAwesomeIcon id=\"ethLogo\" icon={faEthereum} className=\"mr-2\" />\r\n        .069 each\r\n      </div>\r\n      <div id=\"mintCount\">{minted}/6969</div> */}\r\n      <div className=\"snowflakes\">\r\n        {Array.from(\r\n          { length: 10 },\r\n          () => winterSymbols[Math.floor(Math.random() * winterSymbols.length)]\r\n        ).map((symbol, idx) => {\r\n          return (\r\n            <div key={idx} className=\"snowflake\">\r\n              {symbol}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { ReactElement } from \"react\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport \"./faq.css\";\r\n\r\nconst FAQ = (): ReactElement => {\r\n  return (\r\n    <Row\r\n      id=\"faq\"\r\n      className=\"mx-0 d-flex align-items-center justify-content-center\"\r\n    >\r\n      <Col sm={6}>\r\n        <Row className=\"d-flex align-items-center justify-content-center\">\r\n          <h1 style={{ fontSize: \"48px\" }}>MistleToadz</h1>\r\n          <div\r\n            className=\"mt-2 px-2\"\r\n            style={{\r\n              fontSize: \"20px\",\r\n              color: \"#D8E2EF\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            Three months ago, 6969 CrypToadz were heroically freed during a raid\r\n            on Grempland lead by a coalition of citizens of the metaverse.\r\n            Unfortunately, Evil King Gremplin was able to ultimately turn away\r\n            the rebel forces, and maintain his grip over the remaining Toadz.\r\n            The freed 6969 CrypToadz have been in hiding, meticulously planning\r\n            their rescue of Colonel Floorbin and remaining Toadz. Taking note\r\n            from George Washington, the freed Toadz have been preparing for a\r\n            Christmas attack on Grempland. Help the Toadz free their friends and\r\n            family from the rule of Evil King Gremplin by clicking claim.\r\n          </div>\r\n        </Row>\r\n      </Col>\r\n      <Col sm={4} id=\"imgGrid\">\r\n        <div id=\"imgBox\">\r\n          <img src=\"4.png\" alt=\"gremplin\" />\r\n        </div>\r\n        <div id=\"imgBox\">\r\n          <img src=\"3199.png\" alt=\"gremplin\" />\r\n        </div>\r\n        <div id=\"imgBox\">\r\n          <img src=\"3305.png\" alt=\"gremplin\" />\r\n        </div>\r\n        <div id=\"imgBox\">\r\n          <img src=\"6839.png\" alt=\"gremplin\" />\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default FAQ;\r\n","import React, { ReactElement } from \"react\";\r\nimport { Col, Row } from \"reactstrap\";\r\n\r\nconst About = (): ReactElement => {\r\n  return (\r\n    <Row\r\n      id=\"about\"\r\n      className=\"mx-0 d-flex align-items-center justify-content-center py-5\"\r\n    >\r\n      <Col sm={4} style={{ textAlign: \"center\" }}>\r\n        <img\r\n          style={{ borderRadius: \"15px\" }}\r\n          width=\"75%\"\r\n          src=\"temp_gremp.png\"\r\n          alt=\"gremplin\"\r\n        ></img>\r\n      </Col>\r\n      <Col sm={6} style={{ textAlign: \"center\" }}>\r\n        <h1 style={{ fontSize: \"48px\" }}>Gremplin</h1>\r\n        <div className=\"mt-2\" style={{ fontSize: \"20px\", color: \"#D8E2EF\" }}>\r\n          On a January evening in early 2021, Gremplin scurried through dark\r\n          vents and damp pipes after making two wrong turns back home to the\r\n          depths of his hole. When he finally surfaced, trapped in the chaotic\r\n          energy of the metaverse, he scrambled to keep pace. He crafted\r\n          spinning boxes to fit in with the crowd, and drew rotating residents\r\n          of his homeland to help people understand where he’s from. Eventually,\r\n          he took to drawing residents of this new land to pass the time.\r\n          Finally feeling at home, he began to seek out ways to help build in\r\n          this place. He’s just doing what he’s always done - drawing residents\r\n          of lands, be they Nouns or Toadz - just trying to find his way back to\r\n          his hole.\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { ReactElement } from \"react\";\r\nimport { Row } from \"reactstrap\";\r\nimport \"./team.css\";\r\n\r\nconst Team = (): ReactElement => {\r\n  return (\r\n    <>\r\n      <Row\r\n        id=\"team\"\r\n        className=\"mx-0 d-flex align-items-center justify-content-center pt-8\"\r\n      >\r\n        <h1 style={{ fontSize: \"48px\" }}>Made With Love,</h1>\r\n      </Row>\r\n      <Row className=\"mx-0 d-flex align-items-center justify-content-center pb-5\">\r\n        <div className=\"circle\">\r\n          <div className=\"tick\">\r\n            <img style={{ borderRadius: \"25px\" }} src=\"bn.png\" alt=\"bn98\" />\r\n            <div id=\"nameTag\">bn89</div>\r\n          </div>\r\n          <div className=\"tick\">\r\n            <img\r\n              style={{ borderRadius: \"25px\", borderStyle: \"outset\" }}\r\n              src=\"west.png\"\r\n              alt=\"west\"\r\n            />\r\n            <div id=\"nameTag\">cat</div>\r\n          </div>\r\n          <div className=\"tick\">\r\n            <img\r\n              style={{ borderRadius: \"25px\" }}\r\n              src=\"chanzero.png\"\r\n              alt=\"chanzero\"\r\n            />\r\n            <div id=\"nameTag\">chanzero</div>\r\n          </div>\r\n          <div className=\"tick\">\r\n            <img style={{ borderRadius: \"25px\" }} src=\"dinfo.png\" alt=\"dinfo\" />\r\n            <div id=\"nameTag\">dinfo</div>\r\n          </div>\r\n          <div className=\"tick\">\r\n            <img style={{ borderRadius: \"25px\" }} src=\"emmy.png\" alt=\"emmy\" />\r\n            <div id=\"nameTag\">emmy</div>\r\n          </div>\r\n          <div className=\"tick\">\r\n            <img\r\n              style={{ borderRadius: \"25px\" }}\r\n              src=\"heeeee.png\"\r\n              alt=\"heeeee\"\r\n            />\r\n            <div id=\"nameTag\">heeeee</div>\r\n          </div>\r\n          <div className=\"tick\">\r\n            <img\r\n              style={{ borderRadius: \"25px\" }}\r\n              src=\"motivate.png\"\r\n              alt=\"motivateme\"\r\n            />\r\n            <div id=\"nameTag\">motivateme</div>\r\n          </div>\r\n          <div className=\"tick\">\r\n            <img style={{ borderRadius: \"25px\" }} src=\"sum1.png\" alt=\"sum1\" />\r\n            <div id=\"nameTag\">sum1</div>\r\n          </div>\r\n          <div className=\"tick\">\r\n            <img\r\n              style={{ borderRadius: \"25px\" }}\r\n              src=\"temp_gremp.png\"\r\n              alt=\"gremplin\"\r\n            />\r\n            <div id=\"nameTag\">gremplin</div>\r\n          </div>\r\n        </div>\r\n      </Row>\r\n      <hr />\r\n      <Row className=\"d-flex align-items-center justify-content-center pb-3\">\r\n        <a\r\n          className=\"pr-3\"\r\n          rel=\"noreferrer\"\r\n          target=\"_blank\"\r\n          href=\"http://creativecommons.org/publicdomain/zero/1.0/\"\r\n        >\r\n          <img\r\n            src=\"http://i.creativecommons.org/p/zero/1.0/88x31.png\"\r\n            style={{ borderStyle: \"none\" }}\r\n            alt=\"CC0\"\r\n          />\r\n        </a>\r\n        <div className=\"px-2\">\r\n          To the extent possible under law,\r\n          <a rel=\"dct:publisher\" href=\"https://cryptoadz.io/\">\r\n            <span property=\"dct:title\" className=\"px-1\">\r\n              Gremplin\r\n            </span>\r\n          </a>\r\n          has waived all copyright and related or neighboring rights to\r\n          <span property=\"dct:title\" className=\"pl-1\">\r\n            CrypToadz by Gremplin\r\n          </span>\r\n          . This work is published from:\r\n          <span\r\n            property=\"vcard:Country\"\r\n            datatype=\"dct:ISO3166\"\r\n            about=\"https://cryptoadz.io/\"\r\n            className=\"px-1\"\r\n          >\r\n            United States\r\n          </span>\r\n          .\r\n        </div>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","import \"./index.css\";\nimport \"./theme-dark.css\";\nimport { Container } from \"reactstrap\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport React from \"react\";\nimport Header from \"./components/header\";\nimport FAQ from \"./components/faq\";\nimport About from \"./components/about\";\nimport Team from \"./components/team\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Container fluid>\n        <Header />\n      </Container>\n      <FAQ />\n      <About />\n      <Team />\n      <Switch>\n        <Route path=\"faq\" component={FAQ} />\n        <Route path=\"about\" component={About} />\n        <Route path=\"team\" component={Team} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}